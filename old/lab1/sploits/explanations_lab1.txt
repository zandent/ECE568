#Zihan Zhao, 1001103708, simon.zhao@mail.utoronto.ca

Target 1
The typical buffer overflow vulnerability exists in strcpy(...). The copy function keeps copying until it hits null terminator. The output string may be overflowed by its default length. In this case, I made up a string whose has the structure <NOPs><Shellcode><Guess Addresses>. <Guess Addresses> overwrites rip. lab_main will return to the portion of <Shellcode>.

Target 2
It limits the copy length but still are larger than buf length. it is a buffer overflow vulnerability. I use env[] variable to overwrite max copy length. So the actual copy length can reach rip and overwrite return address of foo.

Target 3
It is typical buffer overflow vulnerability. buf size is 64 but copied by extra 80 bytes. I use arg[1] to overflow copy to buf and overwrites return address of foo.

Target 4
Similar with target 2, the copy length is larger than buf length. The difference is that the char pointers which are in copy operation are static. So the char pointer addresses keep the same as what it is assigned by. I overwrite copy length to extend to the position which holds return address.

Target 5
It is format string vulnerability when calling snprintf(...). It limits the copy length and smaller than buf. But we can use %n to overwrite return address at rip. The input string is formed by arg[1] and env[] strings. The string has the structure <Addr of ret address><Addr of ret address + 1><Addr of ret address + 2><Addr of ret address + 3><NOPs><Shellcode><|%08x|%08x|%08x|%08x|%10x|%hhn|%152x|%hhn|%168x|%hhn|%154x|%hhn>. For each %n, it will set the copied char numbers into the address of return address with offset 0,1,2,3. In this way, the shellcode starting address is stored into the address of return address.

Target 6
It is double free vulnerability. After first free, new data takes up the original data region. So second data free finds fake tag in original location, it can overwrite the return address with the pointer to shellcode. The new data format is <Modified Shellcode contains free bit><fake tag 1 link shellcode addr and fake tag 2><fake tag 2 link to rip>.